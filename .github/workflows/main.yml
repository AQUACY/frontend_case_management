name: Quasar CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [production]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Global Dependencies
        run: |
          npm install -g @quasar/cli

      - name: Install Project Dependencies
        run: |
          npm ci

      - name: Lint
        run: |
          npm run lint

      - name: Build
        run: |
          quasar build
        env:
          CI: true

      # Create .htaccess file with your specific configuration
      - name: Create .htaccess
        run: |
          cat > dist/spa/.htaccess << 'EOL'
          <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^ index.html [L]
          </IfModule>
          EOL

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            dist
            .quasar
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  deploy:
    needs: build
    if: github.ref == 'refs/heads/production'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Restore cached build
        uses: actions/cache@v3
        with:
          path: |
            dist
            .quasar
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /var/www/frontend_case_management
            git checkout production
            git pull origin production
            npm install
            npm run build

            # Ensure Apache has proper permissions
            sudo chown -R www-data:www-data dist/spa
            sudo chmod -R 755 dist/spa

            # Enable Apache rewrite module if not already enabled
            sudo a2enmod rewrite

            # Restart Apache to apply changes
            sudo systemctl restart apache2
